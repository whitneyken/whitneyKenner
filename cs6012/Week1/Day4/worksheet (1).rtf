{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww12540\viewh16140\viewkind1
\deftab720
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\ri0\partightenfactor0

\f0\fs24 \cf0 Lab 4 Worksheet\
\
Answer the following questions by modifying this text file. Add your answer below each question.\
\
\
1. Which two binarySearch tests are failing?\
	the second and third,  0 is not in array one, but it is returning true and 20 IS in array 2 but it is returning false\
\
2. What are the values of arr and goal passed in to binary search?\
	for the first test, the array values passed in are [1, 2, 3, 4, 5] and the goal is 2\
\
3. For each of the two cases of binarySearch that are failing, which return statements are they executing in error (is it returning true when it should be returning false, or the other way around)?\
	the 1st failing case is returning true when it should be returning false and the 2nd case is failing because it\'92s returning false when it should be returning true\
\
4. What is the bug in binarySearch? How do you fix it?\
The bug is that we are not looking at the values within the array, we are looking at the number size of the array, so from 0 to the size of the array, not the actual values within it\
\
5. Which loops appear to be inifinite?\
	Loop 2 and loop 4\
\
6. For the loops that you found to be infinite, briefly explain why they are never progressing.\
	for loop 2, the while loop is checking if b is less than 10, but it will ALWAYS be less than 10 because it is set to 0 and we are multiplying it by another value. No matter what we multiply it by, b will always be 0\
	for loop 4, the while loop is checking if f > 0 but it will always be greater than 0 because it is alternating between the value of 5 and 6 because we do f-=c and c*= -1 each loop which results in 1 or -1 being subtracted from f so we infinitely have 5 or 6\
\
7. What does the call to password.split(" ") appear to do? Hint: examine the input value of "password", then examine the items in the "tokens" array returned by the call. \
	It splits the entered string on the spaces and stores each separated component into an array of strings\
\
8. What is the correct password?\
The correct password is:  \'931 4 9 16 25\'94\
}